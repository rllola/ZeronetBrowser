platform:
  - x64

image: Visual Studio 2017

environment:
  matrix:
    - PYTHON: "C:\\Python27-x64"

artifacts:
  - path: build-windows.zip

build: off

init:
  - cmd: copy C:\windows\system32\libeay32.dll C:\Qt\5.11.2\msvc2017_64\bin
  - cmd: copy C:\windows\system32\ssleay32.dll C:\Qt\5.11.2\msvc2017_64\bin
  - SET PATH=%PYTHON%;%PYTHON%\Scripts;C:\Qt\5.11.2\msvc2017_64\bin;%PATH%
  - python -m pip install --upgrade pip setuptools
  - python -m pip install pyinstaller pyinstaller-hooks msgpack gevent enum34 cffi pypiwin32

install:
  - git submodule update --init --recursive
  - call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"
  - set CL=/MP
  - curl -LO https://sourceforge.net/projects/pyqt/files/sip/sip-4.19.13/sip-4.19.13.zip
  - 7z x sip-4.19.13.zip
  - cd sip-4.19.13
  - python configure.py --sip-module PyQt5.sip
  - nmake
  - nmake install
  - cd ..
  - curl -LO https://sourceforge.net/projects/pyqt/files/PyQt5/PyQt-5.11.3/PyQt5_gpl-5.11.3.zip
  - 7z x PyQt5_gpl-5.11.3.zip
  - cd PyQt5_gpl-5.11.3
  - python configure.py --confirm-license --disable=QtNfc --qmake=C:\Qt\5.11.2\msvc2017_64\bin\qmake.exe
  - nmake
  - nmake install
  - cd ..
  - echo "import zeronet" > ZeroNet/__init__.py
  - SET PYTHONPATH=C:\Python27-x64\Lib\site-packages;C:\Python27-x64\libs;%PYTHONPATH%

test_script:
  - python test.py
  - pyinstaller browser.spec

after_test:
  - 7z a build-windows.zip dist/ZeronetBrowser/*

deploy:
  provider: GitHub
  auth_token:
    secure: 6eX2olaIxe4TsfETod+SYOyDsIKwmDivjirb7RPvl/Zd4zYW3dzGr4MieJ2BP89P # your encrypted token from GitHub
  artifact: build-windows.zip
  prerelease: true
  force_update: true
  on:
    appveyor_repo_tag: true        # deploy on tag push only
